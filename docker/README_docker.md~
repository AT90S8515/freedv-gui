# Testing Codec2 using docker
Currently the docker containers build and run tests for codec2.
The build results are not accessible directly.

## Requirements
* docker
* docker-compose
* the StdPeripheral Lib V1.8.0 unpacked in the codec2_build_ubuntu dir ( the name of 
  the top level dir must be STM32F4xx_DSP_StdPeriph_Lib_V1.8.0
* An internet connection
* A STM32F4 devboard connected via ST-LINK/V2

## Building the docker images
Building is only required once
```bash
docker-compose -f docker-compose1604.yml  build
```
## Running the image(s)
The environment variable DEV_STLINK must contain the path to the 
device of the connected ST-LINK. A script `get_stlink.sh` is provided 
for this purpose.

You can control via the environment variables GIT_REPO and GIT_REF 
which branch/commit from which repo is being built.
The if these are not defined default is the `master` branch 
of (https://github.com/drowe67/codec2.git) and does not have to
be specified explicitly.

```bash
export DEV_STLINK=`./get_stlink.sh`
export GIT_REF=my-super-branch
export GIT_REPO=http://github.com/dummy/codec2.git
docker-compose -f docker-compose1604.yml up 

```
## Accessing created output
If you started the docker services using `docker up`, you can easily access 
the compiled output from the docker container.

```
docker cp codec2_ub1604_c:/tmp/build/codec2 .
```
